﻿
[pach]
value1 = C:\Windows\AppDiagnostics\svchost.exe
value2 = C:\Windows\windefender.exe
value3 = C:\Windows\SysWOW64\svchosts.exe
value4 = C:\Windows\rss\csrss.exe
value5 = C:\Windows\SysWOW64\WindowsUpdate.exe
value6 = C:\Windows\debug\lsmos.exe
value7 = C:\Windows\system\msinfo.exe
value8 = C:\Windows\System32\config\systemprofile\AppData\Roaming\Temps\DOC001.exe
value9 = C:\Windows\Temp\conhost.exe
value10 = C:\Windows\debug\lsmos.exe
value11 = C:\PREVENDA\prevenda.exe
value12 = C:\ProgramData\WindowsTask\MicrosoftHost.exe
value13 = C:\ProgramData\Windows\rutserv.exe
value14 = C:\ProgramData\Windows\rfusclient.exe
value15 = C:\ProgramData\wmiApSvr\svchost.exe
value16 = C:\ProgramData\wmiApSvr\
value108 = C:\Windows\NetworkDistribution\svchost.exe
value18 = C:\Windows\mssecsvr.exe
value19 = C:\Windows\tasksche.exe
value20 = C:\Windows\mssecsvc.exe
value21 = C:\Windows\window.exe
value22 = C:\ProgramData\Microsoft\Natiodnal\csrs.exe
value23 = C:\ProgramData\Microsoft\National\sckoot.exe
value24 = C:\ProgramData\Microsoft\Natiodnal\
value25 = C:\ProgramData\Natiodnal\svchostr.exe
value26 = C:\ProgramData\Natiodnal\svchost.exe
value27 = C:\ProgramData\National\svere.exe
value28 = C:\ProgramData\Natiodnal\
value29 = C:\Windows\debug\lsmose.exe
value30 = C:\Windows\debug\
value31 = C:\Windows\IIS\svchost.exe
value32 = C:\Windows\IIS\CPUInfo.exe
value33 = C:\Windows\IIS\smss.exe
value34 = C:\Windows\IIS\
value35 = C:\Windows\security\IIS\taskhost.exe
value36 = C:\Windows\security\IIS\svchost.exe
value37 = C:\Windows\security\IIS\Eter.exe
value38 = C:\Windows\security\IIS\puls.exe
value39 = C:\Windows\security\IIS\
value40 = C:\Program Files\Malwarebytes\Anti-Malware\MBAMService.exe
value41 = C:\Program Files\Malwarebytes\Anti-Malware\
value42 = C:\Windows\System32\TasksHostServices.exe
value43 = C:\Windows\SpeechsTracing\Microsoft
value44 = C:\Windows\SpeechsTracing\spoolsv.exe
value45 = C:\Windows\SpeechsTracing\
value46 = C:\Program Files\Internet Explorer\bin\iexplore.exe
value47 = C:\Program Files\Internet Explorer\bin\
value48 = C:\Program Files (x86)\Common Files\conime.exe
value49 = C:\Windows\SysWOW64\config\audiodg.exe
value50 = C:\Windows\SysWOW64\config\
value51 = C:\Windows\System32\SecureBootThemes\spoolsv.exe
value52 = C:\Windows\System32\SecureBootThemes\
value53 = C:\Windows\SecureBootThemes\Microsoft\svchost.exe
value54 = C:\Windows\SecureBootThemes\Microsoft\
value55 = C:\ProgramData\Microsoft\wmiApSvr\
value56 = C:\ProgramData\Microsoft\wmiApSvr\services.exe
value57 = C:\ProgramData\Microsoft\WmiAppSrv\csrss.exe
value58 = C:\ProgramData\Microsoft\WmiAppSrv\
value59 = C:\ProgramData\WmiAppSrv\svchost.exe
value60 = C:\ProgramData\WmiAppSrv\
value61 = C:\ProgramData\Microsoft\vmicvess\svchost.exe
value62 = C:\ProgramData\vmicvess\vmicvess.exe
value63 = C:\Windows\System32\a.exe
value64 = C:\Program Files (x86)\Common Files\apivbs\dlluidx.exe
value65 = C:\Program Files (x86)\Common Files\apivbs\dlluidx.exe
value66 = C:\Program Files (x86)\Common Files\apivbs\uisrvdll.exe
value67 = C:\Program Files (x86)\Microsoft MSBulas\Setrlas.exe
value68 = C:\Program Files (x86)\Common Files\apivbs\
value69 = C:\Windows\SysWOW64\seser.exe
value70 = C:\Windows\System32\spool\PerfCPI\svchost.exe
value71 = C:\Windows\svchost.exe
value72 = C:\Windows\Help\lsmosee.exe
value73 = C:\Windows\services.exe
value74 = C:\ProgramData\clr_optimization_v4.0.30318_64\svchost.exe
value75 = C:\ProgramData\clr_optimization_v4.0.30318_64\
value76 = C:\ProgramData\Microsoft\clr_optimization_v4.0.30318_64\csrss.exe
value77 = C:\ProgramData\Microsoft\clr_optimization_v4.0.30318_64\
value78 = C:\Windows\SchCache\wuapp.exe
value79 = C:\Windows\SchCache\dnscacheugc.exe
value80 = C:\Windows\SchCache\
value81 = C:\Program Files (x86)\DFnsa.exe
value82 = C:\Windows\Temp\Networks\taskmgr.exe
value83 = C:\Windows\Temp\Networks\
value84 = C:\Windows\Fonts\sqlserver.exe
value85 = C:\Windows\Fonts\rundllhost.exe
value86 = C:\Windows\Fonts\svchost.exe
value87 = C:\Windows\Fonts\win1ogon.exe
value88 = C:\Windows\Fonts\wuauc1t.exe
value89 = C:\Windows\Fonts\Mysql\mance.exe
value90 = C:\Windows\Fonts\Mysql\puls.exe
value91 = C:\Windows\Fonts\Mysql\svchost.exe
value92 = C:\Windows\Fonts\Mysql\taskhost.exe
value93 = C:\Windows\Fonts\Mysql\
value94 = C:\Windows\SysWOW64\PnkBstrA.exe
value95 = C:\Program Files\Unchecky\bin\unchecky_svc.exe
value96 = C:\Program Files\Common Files\System\iediagcmd.exe
value97 = C:\Windows\Temp\RarSFX3\ss.exe
value98 = C:\Windows\Temp\RarSFX3\rundll.exe
value99 = C:\Program Files\KMSpico\Service_KMS.exe
value100 = C:\Windows\SOUNDMAN.EXE
value101 = C:\Windows\ServiceProfiles\NetworkService\Svchost\Svchost.exe
value102 = C:\ProgramData\Microsoft\Windows\Templates\win1ogon.exe
value103 = C:\ProgramData\Microsoft\Windows\Templates\1sass.exe
value104 = C:\ProgramData\Microsoft\Windows\Templates\
value105 = C:\Program Files\Internet Explorer\bin\iediagcmd.exe
value106 = C:\Windows\Temp\RarSFX26\ss.exe
value107 = C:\Windows\Temp\RarSFX26
value109 = C:\Windows\NetworkDistribution\
value110 = C:\ProgramData\clr_optimization_v4.0.30328_64\svchost.exe
value111 = C:\Windows\inf\lsmm.exe
[servisce]
value1 = AdobeFlashPlayer
value2 = MicrosoftMysql
value3 = RpcEpt
value4 = AdobeFlashPlayerUpdateSvc
value5 = AudioServer
value6 = clr_optimization_v4.0.30328_64
value7 = mssecsvc2.0
value8 = mssecsvc2.1
value9 = Windows_Update
value10 = WELM
value11 = WindowsUpdate
value12 = xWinWpdSrv
value13 = HWDeviceService.exe
value14 = xWinWpdSrv
value15 = RManService
value16 = ehSched
value17 = ehRecvr
value18 = NetUdpActivator
value19 = WatAdminSvc
